port: ${PORT}
openapi: 3.0.0
info:
  title: E-Medica API
  version: 1.0.0
  description: |-
    Documentaci√≥n de la API de E-Medica
    Para usar la API :
      consultas a http://ec2-18-228-59-5.sa-east-1.compute.amazonaws.com
      y las rutas necesarias, ejemplo:
      http://ec2-18-228-59-5.sa-east-1.compute.amazonaws.com/specialty
    *Algunas rutas podrian tener errores.
    *Las rutas importantes para crear usuarios, funcionan bien.
    *Para probar las rutas en la documentacion, usar el servidor de desarrollo
servers:
  - url: http://localhost:${PORT}
    description: Development server
  - url: http://ec2-18-228-59-5.sa-east-1.compute.amazonaws.com
    description: Production server
tags:
  - name: Specialty
    description: Todo sobre las especialidades
  - name: Specialist
    description: Operaciones sobre el profesional
  - name: Patient
    description: Operaciones sobre el paciente
paths:
  /specialty:
    get:
      tags: 
        - Specialty
      summary: Obtener la lista de especialidades
      responses:
        '200':
          description: OK

  /specialist:
    get:
      tags: 
        - Specialist
      summary: Obtener la lista de profesionales
      responses:
        '200':
          description: OK

    post:
      tags: 
        - Specialist
      summary: Crear un nuevo especialista
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                dni:
                  type: string
                rup:
                  type: string
                email:
                  type: string
                signatureLink:
                  type: string
                calendarLink:
                  type: string
                mercadoPago:
                  type: string
                specialty:
                  type: string
      responses:
        '200':
          description: OK

    put:
      tags: 
        - Specialist
      summary: Actualizar un especialista por su ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                dni:
                  type: string
                rup:
                  type: string
                email:
                  type: string
                signatureLink:
                  type: string
                calendarLink:
                  type: string
                mercadoPago:
                  type: string
                specialty:
                  type: string
                reviews:
                  type: array
                  items:
                    type: object
      responses:
        '200':
          description: OK

    delete:
      tags: 
        - Specialist
      summary: Eliminar un especialista por su ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK

  /specialist/search:
    get:
      tags: 
        - Specialist
      summary: Encontrar especialistas por nombre o apellido
      parameters:
        - in: query
          name: terms
          schema:
            type: string
      responses:
        '200':
          description: OK

  /specialist/category:
    get:
      tags: 
        - Specialist
      summary: Encontrar especialistas por especialidad
      parameters:
        - in: query
          name: specialty
          schema:
            type: string
      responses:
        '200':
          description: OK

  /specialist/{id}:
    get:
      tags: 
        - Specialist
      summary: Obtener un especialista por su ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
      responses:
        '200':
          description: OK

  /patient:
    get:
      tags: 
        - Patient
      summary: Obtener la lista de pacientes
      responses:
        '200':
          description: OK

    post:
      tags: 
        - Patient
      summary: Crear un nuevo paciente
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                age:
                  type: number
                gender:
                  type: string
                  enum:
                    - Male
                    - Female
                    - Other
                dni:
                  type: string
                email:
                  type: string
                active:
                  type: boolean
      responses:
        '200':
          description: OK

  /patient/{id}:
    get:
      tags: 
        - Patient
      summary: Obtener un paciente por su ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
      responses:
        '200':
          description: OK

    put:
      tags: 
        - Patient
      summary: Actualizar un paciente por su ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                age:
                  type: number
                gender:
                  type: string
                  enum:
                    - male
                    - female
                    - other
                dni:
                  type: string
                email:
                  type: string
                active:
                  type: boolean
      responses:
        '200':
          description: OK

    delete:
      tags: 
        - Patient
      summary: Eliminar un paciente por su ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
